[{"categories":["app"],"content":" 添加了图片信息的水印图片 烤肠水印 本产品为捷径代码，无需下载任何app，直接使用。该捷径代码支持 iPhone, iPad 和 Mac电脑 使用。 ","date":"2022-07-27","objectID":"/watermark_sc/:0:0","tags":["iOS","iPhone","MacOS","Shortcut","徕卡","捷径","苹果","水印"],"title":"捷径 – 烤肠水印 - 徕卡水印","uri":"/watermark_sc/"},{"categories":["app"],"content":"产品特色 支持添加各大主流相机厂商的 Logo 水印：飞思，哈苏，徕卡，索尼，尼康，佳能，富士，松下等 根据图片信息显示拍摄设备和镜头型号，摄影爱好者的福音 完全自定义显示对应的拍摄参数 自动或者手动添加地理位置 按需求灵活显示拍摄地点 代码公开，不会上传您的图片，不会侵犯您的隐私，联网功能仅用于转换GPS坐标到城市和检查软件是否有更新，请放心使用 本捷径完全免费，如果您觉得对您有所帮助或想支持作者不断更新后续版本，欢迎微信打赏或闲鱼搜索 烤肠水印，即可支持作者。如果您打算使用外币支付，请点击 “Buy me a coffee” 按钮支持作者 奖励作者吃根烤肠 ","date":"2022-07-27","objectID":"/watermark_sc/:1:0","tags":["iOS","iPhone","MacOS","Shortcut","徕卡","捷径","苹果","水印"],"title":"捷径 – 烤肠水印 - 徕卡水印","uri":"/watermark_sc/"},{"categories":["app"],"content":"下载地址 烤肠水印 v25 ","date":"2022-07-27","objectID":"/watermark_sc/:2:0","tags":["iOS","iPhone","MacOS","Shortcut","徕卡","捷径","苹果","水印"],"title":"捷径 – 烤肠水印 - 徕卡水印","uri":"/watermark_sc/"},{"categories":["app"],"content":"更新内容 v25: 无法验证地理信息时可以自动弹出手动输入框提示 ","date":"2022-07-27","objectID":"/watermark_sc/:3:0","tags":["iOS","iPhone","MacOS","Shortcut","徕卡","捷径","苹果","水印"],"title":"捷径 – 烤肠水印 - 徕卡水印","uri":"/watermark_sc/"},{"categories":["app"],"content":"使用方法 ","date":"2022-07-27","objectID":"/watermark_sc/:4:0","tags":["iOS","iPhone","MacOS","Shortcut","徕卡","捷径","苹果","水印"],"title":"捷径 – 烤肠水印 - 徕卡水印","uri":"/watermark_sc/"},{"categories":["app"],"content":"方法一 打开 iPhone, iPad 或者 Mac 的捷径应用程序，点击 烤肠水印 图标中部区域即可运行，注意不要点到右上角的三个圆点编辑按钮 点击图标中间区域，不要点击右上角的三个圆点的修改按钮 如果不慎点击三个圆点进入修改界面，点击右下角播放按钮也可以运行该捷径。 ","date":"2022-07-27","objectID":"/watermark_sc/:4:1","tags":["iOS","iPhone","MacOS","Shortcut","徕卡","捷径","苹果","水印"],"title":"捷径 – 烤肠水印 - 徕卡水印","uri":"/watermark_sc/"},{"categories":["app"],"content":"方法二 选择需要添加水印的图片，然后点击共享按钮，选择 烤肠水印 即可 点击图片，然后选择共享按钮，最后选择 “烤肠水印” 即可 最后如果您觉得本捷径代码对您有所帮助，欢迎转发给您身边的朋友，也欢迎来信反馈错误或提交意见。 ","date":"2022-07-27","objectID":"/watermark_sc/:4:2","tags":["iOS","iPhone","MacOS","Shortcut","徕卡","捷径","苹果","水印"],"title":"捷径 – 烤肠水印 - 徕卡水印","uri":"/watermark_sc/"},{"categories":["app"],"content":"感谢 感谢以下热心网友的热心赞助 Gergeous ","date":"2022-07-27","objectID":"/watermark_sc/:5:0","tags":["iOS","iPhone","MacOS","Shortcut","徕卡","捷径","苹果","水印"],"title":"捷径 – 烤肠水印 - 徕卡水印","uri":"/watermark_sc/"},{"categories":null,"content":"我们是谁 推荐的文本： 我们的站点地址是：https://www.mahong.me。 ","date":"2021-11-14","objectID":"/private/:1:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":null,"content":"评论 推荐的文本： 当访客留下评论时，我们会收集评论表单所显示的数据，和访客的IP地址及浏览器的user agent字符串来帮助检查垃圾评论。 由您的电子邮箱地址所生成的匿名化字符串（又称为哈希）可能会被提供给Gravatar服务确认您是否有使用该服务。Gravatar服务的隐私政策在此：https://automattic.com/privacy/。在您的评论获批准后，您的资料图片将在您的评论旁公开展示。 ","date":"2021-11-14","objectID":"/private/:2:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":null,"content":"媒体 推荐的文本： 如果您向此网站上传图片，您应当避免上传那些有嵌入地理位置信息（EXIF GPS）的图片。此网站的访客将可以下载并提取此网站的图片中的位置信息。 ","date":"2021-11-14","objectID":"/private/:3:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":null,"content":"Cookies 推荐的文本： 如果您在我们的站点上留下评论，您可以选择用cookies保存您的名字、电子邮箱地址和网站地址。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些cookies会保留一年。 如果您访问我们的登录页，我们会设置一个临时的cookie来确认您的浏览器是否接受cookies。此cookie不包含个人数据，且会在您关闭浏览器时被丢弃。 当您登录时，我们也会设置多个cookies来保存您的登录信息及屏幕显示选项。登录cookies会保留两天，而屏幕显示选项cookies会保留一年。如果您选择了“记住我”，您的登录状态则会保留两周。如果您注销登陆了您的账户，用于登录的cookies将会被移除。 如果您编辑或发布文章，我们会在您的浏览器中保存一个额外的cookie。这个cookie不包含个人数据而只记录了您刚才编辑的文章的ID。这个cookie会保留一天。 ","date":"2021-11-14","objectID":"/private/:4:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":null,"content":"来自其他网站的嵌入内容 推荐的文本： 此站点上的文章可能会包含嵌入的内容（如视频、图片、文章等）。来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别。 这些站点可能会收集关于您的数据、使用cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互。 ","date":"2021-11-14","objectID":"/private/:5:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":null,"content":"我们与谁共享您的信息 推荐的文本： 若您请求重置密码，您的IP地址将包含于密码重置邮件中。 ","date":"2021-11-14","objectID":"/private/:6:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":null,"content":"我们保留多久您的信息 推荐的文本： 如果您留下评论，评论和其元数据将被无限期保存。我们这样做以便能识别并自动批准任何后续评论，而不用将这些后续评论加入待审队列。 对于本网站的注册用户，我们也会保存用户在个人资料中提供的个人信息。所有用户可以在任何时候查看、编辑或删除他们的个人信息（除了不能变更用户名外）、站点管理员也可以查看及编辑那些信息。 ","date":"2021-11-14","objectID":"/private/:7:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":null,"content":"您对您的信息有什么权利 推荐的文本： 如果您有此站点的账户，或曾经留下评论，您可以请求我们提供我们所拥有的您的个人数据的导出文件，这也包括了所有您提供给我们的数据。您也可以要求我们抹除所有关于您的个人数据。这不包括我们因管理、法规或安全需要而必须保留的数据。 ","date":"2021-11-14","objectID":"/private/:8:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":null,"content":"我们将您的信息发送到哪 推荐的文本： 访客评论可能会被自动垃圾评论监测服务检查。 ","date":"2021-11-14","objectID":"/private/:9:0","tags":null,"title":"隐私政策","uri":"/private/"},{"categories":["app"],"content":" 介绍 Piano LED for Arduino (以下简称PLA) 是一个完全免费、轻量级无广告的 MacOS 程序，它可以解析电钢琴发送的 MIDI 文件，从而发送控制指令到 Arduino， 从而让您实现通过电钢琴控制 LED 灯带的目的。 ","date":"2021-11-05","objectID":"/pla/:0:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"下载地址 Piano LED for Arduino v1.0: 百度网盘（提取码 ilpn） Google Drive Mega Upload ","date":"2021-11-05","objectID":"/pla/:1:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"效果视频 详细配置教程可参考下文，我已尽可能使用通俗易懂的文字进行说明，但是如果您对硬件或是编程知识实在没有了解，无法独立完成，可以给我邮件寻求帮助，当然我会收取您额外费用为我的个人劳务所得，因为时差或是工作原因，如不能及时回复请见谅 😄 请不要长时间凝视 LED，强光会对您的眼睛造成不可逆回的损害！ ","date":"2021-11-05","objectID":"/pla/:2:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"原理（数据流） 原理 ","date":"2021-11-05","objectID":"/pla/:3:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"硬件需求 Arduino Uno 长于1米4的 WS2812B 灯带 (144 灯珠/米) 330 欧电阻 （可选） 三根根杜邦线，最好带不同颜色便于区分 两根 USB 线缆（接口 type B）用于 Arduino 和 电钢琴连接您的 Mac （无线连接有非常明显的延迟） MacOS 系统高于 Big Sur (MacOS 11.0) 一个电钢琴或是 MIDI 键盘 ","date":"2021-11-05","objectID":"/pla/:4:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"准备工作 还原电钢琴为出厂设置，打开 MIDI 传输功能 打开电钢电源后通过 USB 连接您的电脑 按照图示，连接 LED 灯带，通常来说，灯带红色需要 5V 电压输入，白色为接地，绿色为控制信号接口，连接到 Arduino 的 9 号针脚。具体链接方法请参照 LED 等待说明为准。 红色为 5V 电压，绿色连接 330 欧姆后连接 9号针脚，白色接地 安装 Arduino IDE for Mac ，然后打开软件后下载 Arduino 代码，代码可以通过点击 File -\u003e Save Arduino Sketch to Disk 下载 Save sketch to your mac 在 Arduino IED 中安装 FastLED 库 上传刚才下载的代码到 Arduino 在打开电钢电源之后启动 PLA，如果已经启动了 PLA，请完全关闭后在开启电钢电源。因为 PLA 只有在软件启动的时候去寻找您的电钢 打开 PLA，开始弹奏 ","date":"2021-11-05","objectID":"/pla/:5:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"快速开始 上传 Arduino 代码仅需要执行一次，在随后的演奏中您只需要连接 Arduino 即可 连接 Arduino （这里假设您已经完成代码上传），连接电钢琴并打开电钢的电源 启动 PLA 之后通过左右按钮选择 Arduino 的端口 usbmodem14201 ，端口也许会不同，这里显示的名称应对应 Arduino 在您 Mac 中显示的一致 图片中间显示的目前将要连接的端口，通过左右按钮选择 Arduino 的端口后，点击右侧开始按钮即可连接 Arduino 点击右侧的电源按钮即可开始连接. 当您看到 LED 灯带从左往右依次闪过的时候，表明连接正常 😄 测试环境为 Arduino Uno, MacBook Pro 16 (2019), Roland FP-90. ","date":"2021-11-05","objectID":"/pla/:6:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"关于消息传送 传送到 Arduino 的消息一共有一字节，它包含了音符的状态和音符名称。其中第一比特表示了音符状态，其余七比特表示了音符名称 ","date":"2021-11-05","objectID":"/pla/:7:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"音符状态 如果第一比特为 1， 表示该音符已经按下，十进制中表示该数值加 128 ","date":"2021-11-05","objectID":"/pla/:8:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"音符名称 电钢琴一共有 88 个按键，因此音符抬起的时候，发送的范围就是 [21~108] = [0x15~0x6c] = 0b[0001 0101 ~ 0110 1100]。同理音符按下需要递加 128 ","date":"2021-11-05","objectID":"/pla/:9:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["app"],"content":"举例 如果 A0 （钢琴最左侧按键）抬起时，PLA 会发送 21(0x15) 到 Arduino，当按键按下时 PLA 会发送 149(21+128) 如果 C8（钢琴最右侧按键）抬起时，PLA 会发送 108(0x6C) 到 Arduino，当按键按下时 PLA 会发送 236(108+128) ","date":"2021-11-05","objectID":"/pla/:10:0","tags":["特效钢琴","Arduino","LED","MacOS","MIDI","Piano","WS2812","WS2812B"],"title":"Piano LED for Arduino – 苹果版特效钢琴","uri":"/pla/"},{"categories":["mt"],"content":"尊重原创，请勿转载! 作者：图林根の烤肠 ","date":"2021-04-03","objectID":"/freed/:0:0","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"前言 虚拟演播室（Virtual Studio，或者 Virtual Set）技术在上个世纪 80 年代就已经出现，它主要使用了色键（Keying）技术，摄像机追踪技术（Camera-Tracking），Mixed Reality（MR, 混合现实）等技术来将现实世界中拍摄的物体合成到虚拟场景中，从而实现一些现实环境中难以实现的效果。受限于当时的硬件环境，该技术实现的效果并不理想，并不能使观众带入到虚拟场景中。近些年来，随着计算机图形技术和硬件的不断发展（对的没错，跟5G，大数据，人工智能没关，这几项国内新闻动不动就要提几句，生怕不沾边不算新科技似的😂），通过虚拟演播室已经可以在演出直播中制作出非常惊艳的效果。从 Vizrt 官网 就可以看到目前的几个实例项目。由于毕设的虚拟演播室项目需要使用 Unity 引擎而不是 Unreal 来实现摄像机的同步功能，亦或许也许是年代久远的原因，并没有发现其它关于这方面的知识介绍，随即决定简要介绍下这个通讯协议。鉴于这篇文章主要是介绍free-d协议，相关虚拟演播室的基础知识内容就不展开叙述了（当然，如果你或多或少听说过 free-d，也能直接说明你已经不需要了解相关知识了）。 使用 Unreal 来制作的气象广播 ","date":"2021-04-03","objectID":"/freed/:1:0","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"Free-d 协议的介绍 Free-d 摄像机追踪系统于上个世纪90年代由 BBC（就是那个擅长使用滤镜的公司🤣）开发1，其使用的通讯协议被称作 free-d协议。由于该协议数据结构简单且十分高效，一些 PTZ 云台摄像机，例如松下的大部分 PTZ 摄像机，都遵了该标准。 Free-d 协议的内容既可以通过 RS422/RS485 串口，也可以使用 IP 网络，通过 UDP 端口进行数据发送。通过串口发送数据的规格如下 2,3 | Baud rate | 38.4 kbaud | | Data bits | 8 (LSB first) | | Parity | Odd | | Stop bits | 1 | | Total bits | 11 | 该协议的数据内容为主要由四部分组成：消息类型（Message type）、摄像机 ID 、具体数据（该数据的组成依据消息类型而不同）、校验位（Checksum）。该协议的字节消息发送方式为 大端序（Big-Endian），校验方式是通过 0x40 减去消息的前面28字节（包括头部的消息类型），然后取最后两位得到。该协议的消息发送机制分为两种，一种是每秒钟 30 次的 Stream 模式（默认为该模式），另一种是按需发送的 Polled mode，该模式仅仅在请求信息的时候发送消息，但是请求的频率不能超过每秒100次，及消息请求之间需要 0.1ms 间隔。 这个校验方法我并没有去实际验证，因为我项目中使用的摄像机我是通过 UDP/IP 方式接收数据，对传输要求不高，并不需要数据验证，如有朋友验证过，欢迎留言。 英文原文： The checksum is calculated by subtracting (modulo 256) each byte of the message, including the message type, from 40 (hex) ","date":"2021-04-03","objectID":"/freed/:2:0","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"消息类型 Message Type Free-d 协议的消息内容不单单发送摄像机的空间信息，它可以包含不同的数据内容。可以简单理解为不同的消息类型决定了 free-d 协议传输的数据格式有所不同，不同的消息类型分别对应了不同的使用目的。主要的消息类型可以分为： 类型 简要说明 Type D0 -poll/command 用于从free-d™单元获取或者发送数据 Type D1 – camera position/orientation data 用于从free-d™单元传输摄像机位置和方向数据（摄像机同步的关键类型） Type D2 – system status 用于从free-d™单元传输系统状态。 Type D3 – control parameters 用于从free-d™单元传输或者请求控制参数 Type D4 \u0026 D5 – target data 用于从free-d™单元传输目标数据 Type D6 \u0026 D7 – image data 用于从free-d™单元传输图像数据 Type D8 – EEPROM data 用于从free-d™单元将EEPROM数据传输 Type D9 – request EEPROM data 用于请求从free-d™单元传输EEPROM数据 Type DA – camera calibration data 用于从free-d™单元传输相机校准数据 Type DB – diagnostic mode 用于将free-d™单元切换诊断模式 由于每一种消息类型所定义了不同的数据格式，这里碍于篇幅，只会介绍下最重要的 Type D1 - camera position/orientation， 该类型是我们实现摄像机同步的关键所在。其余消息类型还请读者自行查阅详细内容，具体参考链接和下载地址3 都可以在文章末尾找到。 ","date":"2021-04-03","objectID":"/freed/:3:0","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"Type D1 - Camera position/orientation data Type D1 的数据包一共有 29字节 (尖括号的内容为一字节)， 包括了摄像机的八个参数数据，这八个参数主要包括摄像机的六个外部参数和两个内部参数。外部的六个参数为：摄像机的空间位置（x，y，z），摄像机自身水平（pan）、垂直（tilt）和自身旋转（roll）的数值。内部两个参数包括摄像机镜头的缩放（zoom）和对焦（focus）数值。具体结构内容如下： 字节 描述 \u003cD1\u003e 消息类型 \u003cCA\u003e 摄像机 ID \u003cPH\u003e\u003cPM\u003e\u003cPL\u003e 水平 Pan 角度 \u003cTH\u003e\u003cTM\u003e\u003cTL\u003e 垂直 Tilt 角度 \u003cRH\u003e\u003cRM\u003e\u003cRL\u003e 旋转 Roll 角度 \u003cXH\u003e\u003cXM\u003e\u003cXL\u003e 摄像机的 X 坐标 \u003cYH\u003e\u003cYM\u003e\u003cYL\u003e 摄像机的 Y 坐标 \u003cHH\u003e\u003cHM\u003e\u003cHL\u003e 摄像机的 H 坐标 (Z 坐标) \u003cZH\u003e\u003cZM\u003e\u003cZL\u003e 缩放（zoom）数值 \u003cFH\u003e\u003cFM\u003e\u003cFL\u003e 对焦时的焦点（focus）数值 \u003cSH\u003e\u003cSL\u003e 由用户保留，以做它用 \u003cCK\u003e 校验位 ","date":"2021-04-03","objectID":"/freed/:4:0","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"坐标轴的定义 摄像机的坐标轴采用右手法则，其中 x 和 y 轴确定水平面，z 轴的正数值方向指向正上方。 ","date":"2021-04-03","objectID":"/freed/:5:0","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"摄像机水平平移（pan）角度的定义 水平角度的定义 我们从上往下俯视摄像机（请注意上图中 xyz 坐标轴），这时候摄像机镜头以 z 轴进行的左右旋转被定义为 pan。其中，摄像机镜头光轴的正前方（y 轴）指向的方向定义为 0 度，当摄像机以 z 轴按照顺时针方向移动时，数值为正，反之则为负数。该数值由三字节（24 位）表示带正负号的浮点数值。第 23 位（数据开头从左往右第一位）是符号位 ，其中 0 表示正数，1 表示负数，并采用补码带形式表示负数。 接下来的 8 位（22 到 15）表示整数部分，剩余的 15 位（14 到 0）为小数部分。 这三个字节的数据取值范围为 -180.0 度（0xA60000）到 +180.0 度（0x5A0000）。为了容易计算，你也可以把 16 进制的数值转换成十进制，然后除以 32768 即可得到具体的角度，换句话说，就是说每一十六进制的数值，对应十进制 1/32768 角度。 文档中注明的符号位为第23为，但是笔者通过 UPD/IP 测试（win10， Unity3D， C#）的数据却是第0位为符号位，1～8位表示正数部分，数值表示的顺序正好跟文档中说明的内容相反，具体实际情况还请读者自行确认。 ","date":"2021-04-03","objectID":"/freed/:5:1","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"摄像机垂直倾斜 （tilt）角度的定义 倾斜角度的定义 同上面的方法类似，当我们从摄像机的右侧观看时 （请注意上图坐标轴），摄像机围绕 x 轴转动的角度被称作倾斜角度，这其中正方向为逆时针方向（往 z 轴移动）倾斜，反之为负值。Tilt 的数值的表达方式同 pan 一样，都是以 24 位二进制表示浮点数值，第 23 位（数据开头从左往右第一位）是符号位 ，接下来的 8 位（22 到15）表示整数部分，剩余的 15 位为小数部分。 Tilt 数据取值范围为 -90.0 度（0xD30000）到 +90.0 度（0x2D0000）。简便计算方法同样为每一十六进制的数值，对应十进制 1/32768 。 ","date":"2021-04-03","objectID":"/freed/:5:2","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"摄像机滚动旋转 （roll）角度的定义 旋转角度的定义 同一个道理，这次我们从摄像机背面向前观察（同样需注意上图右上角的坐标轴），顺指针方向为正，反之为负值。跟 pan， tilt 同样也是采用了 24 比特来表示数值。第 23 位是符号位 ，接下来的 8 位（22 到15）表示整数部分，剩余的 15 位为小数部分。 Roll 数据取值范围为 -180.0 度（0xA60000）到 +180.0 度（0x5A0000），简要换算方法为 1/32768； ","date":"2021-04-03","objectID":"/freed/:5:3","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"摄像机空间数值的定义 学过计算机图形学的朋友应该对坐标空间相当了解，这相机的 xyz 坐标空间的原点定义为摄像机追踪系统校准时的位置， xyz 轴的定义也同样为校准时摄像机自身的坐标轴，xyz 的数据均采用 24 比特来表示带符号的浮点数值，其中第 23 位是符号位 ，接下来的 17 位（22 到 6）表示整数部分，剩余的 6 位为小数部分。xyz 数据取值范围为 -131072.0 毫米（0x800000）到 +131072.0 毫米（0x7FFFFF），计算方法为 1/64 。 ","date":"2021-04-03","objectID":"/freed/:5:4","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"摄像机缩放（zoom）和焦点（focus）数值的定义 缩放数值的定义 摄像机的缩放数值定义为摄像机视锥的垂直夹角。可以从上图这样理解，从摄像机视原点出发，画两条沿着视锥体的线段，这两条线段的夹角被称作摄像机的缩放数值。可以把焦距理解为视锥的远平面 (far plane)，开口越大，远平面离摄像机越近，及焦距越短。远平面而相机的焦点被定义为相机镜头与对象将处于尖锐焦点之间的对象之间的距离。这两个数值均需要摄像机或是摄像机追踪系统基于镜头和相机的类型转换后才能到真正的缩放值。缩放和焦点值同样由 24 位二进制数字组成，不同的是它表示的是无符号正整数，就是说 24 位全部表示为正整数，他们的取值范围都为 1365~4095 之间。 我目前使用的是松下的 AW-UE150 摄像机，该相机能够通过 free-d协议自动发送摄像机镜头的缩放和焦点信息，但是我仍然不清楚它们是如何编码具体的镜头数据的，目前我已经联系过松下欧洲这边的客服，但是他们给我的答复是无法从 free-d 协议中准确获得镜头的实际焦距。就是说接收到的数据和镜头实际焦距并不是线性关系，并不能直接 Mapping 获得。例如摄像机发送的焦距数据范围是 0x555~0xFFF， 镜头焦距的可变范围为 8.8mm~176mm，如果我接收到 0xAAA，我并不能推断此时的焦距为 (176-8.8)/2 = 83.6mm。官方并没给我详细的答复，应该他们的客服并不是开发人员。这里个人推断，松下发送的数据应该直接和镜头的移动距离成线性关系，不过这个还需要测试后才知道。如有朋友清楚相机具体是如何将焦距等信息编码后发送的，请来信告知，这里先表示下感谢。 ","date":"2021-04-03","objectID":"/freed/:5:5","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"总结 以上就是关于 free-d 协议的简要介绍，最后个人十分推荐阅读下参考链接中原版的 PDF 文件 来深入了解该协议的具体内容，这份文档里面非常详细的介绍了 free-d 系统是如何追踪摄像机的。不得不让人感叹，在当初那个年代，能够设计出这么复杂惊艳的系统，可惜碍于当时的硬件条件，该技术并没有得到大范围的推广。现如今，随着硬件水平的不断提升，游戏引擎诸如 Unreal 和 Unity3D 已经越来越多的应用到了影视领域的创作，这就使虚拟演播室技术得到了广泛推广，更加丰富了电视节目的创作，我个人也相信，在不久的将来，电视栏目的质量，尤其是直播领域，将会给观众带来更加震撼的视觉冲击体验。 使用 free-d 技术搭建的摄像机追踪系统，演播室顶部由不同的 LED 图案组成，通过安装在摄像机上面的感应装置可以判断摄像机相对演播室顶部图案的位置，从而实现空间定位 ","date":"2021-04-03","objectID":"/freed/:6:0","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["mt"],"content":"参考文献 Graham Thomas. „Mixed reality techniques for TV and their application for onset/pre-visualisation in film production“. In: International Workshop on Mixed Reality Technology for Filmmaking (DVD), 2006. 2006. ↩︎ Free-d Virtual Studio System Operators Guide, Vinten Radamec, https://www.yumpu.com/en/document/view/6590984/free-d-virtual-studio-system-operators-guide-vinten-radamec ↩︎ Vinten Radamec Free-d User Manual, Installation manual v1.4.4, https://www.manualsdir.com/manuals/641433/vinten-radamec-free-d.html?download ↩︎ ↩︎ ","date":"2021-04-03","objectID":"/freed/:7:0","tags":["Camera-Tracking","Free-D","FreeD","Media Technology","Virtual Set","Virtual Studio","同步协议","媒体技术","摄像机","摄像机同步","摄像机追踪","虚拟演播室","虚拟演播室技术"],"title":"简述虚拟演播室中的 free-d 摄像机同步协议","uri":"/freed/"},{"categories":["app"],"content":" 下载 苹果商店 产品特点: 三种不同的密码适应各种情况. 普通密码：用这个密码登录后会显示你的普通文件。 超级密码：可以显示/隐藏你的秘密文件。 紧急密码：这个密码会在您登录应用程序之前删除您的所有密文件，彻底避免数据泄露。 非订阅制，一经购买终身使用。 完全离线，杜绝您的个人隐私泄漏。 双重加密，最大限度的保护您的个人隐私。 可以为每个文件夹单独设置隐藏状态。 支持备份/恢复功能。 记录访问日志，让您可以查看任何时段的非授权的访问。 无任何限制，无广告。 无线传输，拍照记录等功能敬请期待。 隐私策略 您使用隐私猎手，即表示您信赖我们对您的信息的处理方式: 本软件不会使用联网功能，完全实现了数据的本地化存储。只有当您添加或者导出图片的时候，本 app 才会申请访问您的相册。如果您开启了 FaceId 或是 TouchID，本软件会请求开启生物验证权限。我们深知这项责任事关重大，因此一直致力于保护您的信息，并让您拥有完全控制权。因此，本 app 不会收集您的任何信息，您也无需担忧，可以放心使用。 服务条款 本软件除了验证订阅之外，不会使用任何联网功能，完全本地化在您的手机离线运行，您可以放心存入您的任何隐私文件。 由于 iPhone 的隐私策略，本软件开发者无法访问您在 隐私猎手中保存的任何文件，这意味着您需要对您的数据负责，由于忘记密码，手机损坏等问题造成的数据丢失，本作者不承担任何责任。 基于数据的敏感性，请您定期备份，并将备份文件复制到其它外部设备（诸如您的个人电脑或移动硬盘）。 由于版本的迭代更新频繁，老旧的版本将在往后不再支持，请您在软件升级之前创建当前文件的备份，如果因为软件升级而造成您数据的丢失，本作者不会对您的数据丢失负责。 如果您在苹果商店购买过的版本小于5.0，那么您将无限期（手机当前时间往后推算100年）使用全部的高级功能。 如果您对本 app 有任问题，亦或是 bug 反馈，欢迎通过 app 中的联系方式来通知作者。 ","date":"2019-11-12","objectID":"/secret_hider/:0:0","tags":["Secret Hider"],"title":"隐私猎手","uri":"/secret_hider/"},{"categories":["app"],"content":" 虽然该软件能够判断绝大多数车型是否符合进口规范，但是依然不能保证100%正确。具体详情请联系国内进口代理货运公司或汽车官网查询，造成的一切损失不承担任何法律责任！ 下载 苹果商店下载 介绍 本软件采用最新算法，主要面向海内外进口车经销商及个人海外购车用户而开发。该应用采用大量一手车辆报关信息，可以快速查询进口车辆是否符合中国国家车架号（VIN 码）进口标准，节省您宝贵的时间。至于说为什么软件需要收费，主要原因是 时间无价，我相信对于做平行车贸易的朋友来说，动辄几十万上百万的进口车业务，这 100 块钱也许连半顿饭钱都不到，却能省去很多的时间。 特性 使用方便，直接输入17位车架号即可直接获知寻获的车辆是否可以顺利报关。 完全本地化算法，保证了您的车架号信息不会上传（您可以自行选择是否上传搜索记录到iCloud进行同步，包括苹果也无法访问您上传的同步文件），可以有效的保护您的经销商车型信息。 如果您有更好的意见或者报告软件 bug，欢迎按照下面的地址发邮件留言。我将尽快为您答复。 使用 ","date":"2017-06-02","objectID":"/vin/:0:0","tags":["平行进口车助手"],"title":"平行进口车助手","uri":"/vin/"},{"categories":["app"],"content":"1. 查询 输入17位车架号即可，点击 “查询” 按钮，不论结果正确，都会出现类似车架号是否符合规范的相关提示。 ","date":"2017-06-02","objectID":"/vin/:1:0","tags":["平行进口车助手"],"title":"平行进口车助手","uri":"/vin/"},{"categories":["app"],"content":"2. 车架号模拟 ","date":"2017-06-02","objectID":"/vin/:2:0","tags":["平行进口车助手"],"title":"平行进口车助手","uri":"/vin/"},{"categories":["app"],"content":"3. 历史记录： 如果您之前使用过软件的查询功能，那么在最新的版本中会自动保存查询记录。如果当查询的车型如果与数据库中的车型匹配时，查询记录会自动包含相关车型的车标，方便一目了然的查看结果。 ","date":"2017-06-02","objectID":"/vin/:3:0","tags":["平行进口车助手"],"title":"平行进口车助手","uri":"/vin/"},{"categories":["app"],"content":"4. 成本计算器 输入基本的采购价格，即可根据车型自动计算出购车成本，可以让您快速为您的销售做出定价。 ","date":"2017-06-02","objectID":"/vin/:4:0","tags":["平行进口车助手"],"title":"平行进口车助手","uri":"/vin/"},{"categories":["mt"],"content":"尊重原创，请勿转载! 作者：图林根の烤肠 2020年6月注：因为年代实在久远，手头目前在忙于 Unity 和 AR 项目的事情，还有不少 iOS 的 app 待开发，待时间赋予会抽空写一篇通过 Python 实现的内容，还请见谅～ CIPIC HRTF 的数据已经找到，感谢‘海阔天空’同学的帮助，Github 下载链接，无过无法下载我也把数据放到了百度网盘。 ","date":"2015-12-30","objectID":"/hrtf_matlab/:0:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效 Matlab实现","uri":"/hrtf_matlab/"},{"categories":["mt"],"content":"介绍 讲完了 上一篇 对实现方法，结下我们就可以开始实际执行代码了。本篇文章的代码都可以从我的 Github 中的 HRTF文件夹 中找到。如果 Github 无法下载，可以移步 百度网盘 密码:lyi6。 首先一句话概括3D音频实现的原理：找到对应空间的HRIR数值，然后卷积音频信号即可，是不是看上去很简单😀 ","date":"2015-12-30","objectID":"/hrtf_matlab/:1:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效 Matlab实现","uri":"/hrtf_matlab/"},{"categories":["mt"],"content":"总体概览 首先主要介绍一下这些文件的功能： doc 文件夹里面是关于 CIPIC HRTF 的文档说明，具体相关的资料也可以参考 CIPIC 官网，个人建议下载官方的那个全部 Matlab 文档（MATLAB version），总计170 Mb 左右, 在下载完成后可以运行里面的showdata.m文件，从而查看各个位置相关的频谱信息。 audio\\_with\\_brir.m 该函数是主要算法，描述了音频文件如何与 HRTF数据进行卷积，从而实现3D音效。 hrir\\_final.mat是 CIPCI KEMAR 21号（Subject_021）的 HRTF 数据，该数据采用了大耳廓进行采集。 load\\_CIPIC\\_HRIR.m的主要功能是读取 hrir\\_final.mat 的左右耳 HRIR 数据，然后在用于audio\\_with_brir.m文件进行信号卷积。 nokia.wav 这个不用多说了，一段测试音频，诺基亚的经典铃声。 main.m 为代码的运行的主文件。 下面开始分别对各个文件进行解释说明： ","date":"2015-12-30","objectID":"/hrtf_matlab/:2:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效 Matlab实现","uri":"/hrtf_matlab/"},{"categories":["mt"],"content":"代码介绍 ","date":"2015-12-30","objectID":"/hrtf_matlab/:3:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效 Matlab实现","uri":"/hrtf_matlab/"},{"categories":["mt"],"content":"读取HRTF函数 在文件 doc/hrir_data_documentation.pdf中，标明了该 HRTF 数据的空间坐标系可以解释为：与头部水平的Azimut方位角 和头部垂直的 Elevation 立体角。其中 Azimut 以头部正前方为0度，-90°为左耳方向，+90°为右耳方向。取值为 [-80:-65:-55:-45:5:45:55:65:80] 一共25个点，其中从-45°到45°梯度为5°。Elevation 的取值范围为 [-45 + 5.625 * （0：49）]一共50个采样点，其中低于头部为负值，高于头部为正值。说得有些抽象，看下面一张图便一路了然。 Azimuth \u0026 Elevation 图a从左往右数有25个点（25列，可以想像把手臂伸直，指向你的正前方，然后左右移动手臂画出平行于眼前的一个弧形，这个扇形平面由25个点组成），与之对应的即为Azimut，图b对应的为 Elevation，一共50个采样点(同理手臂伸直，上下摆动组成另一个扇形平面，这个平面一共50横行，从B图中右面逆时针数即可)。 接下我们来看HRTF的数据文件，双击通过 Matlab 调用hrir\\_final.mat文件后会发现，hrir\\_l 与 hrir\\_r就是与之对应的左右耳HRIR数据。但是随之来的问题就是hrir\\_l的文件 size 是 25 x 50 x 200 ，这是因为 HRTF 的数据是一个三维空间数据，其中的25表示的是 Azimut（图a），50为 Elevation（图b），200为该点的数据。假如我们需要取一个平行于头部正前方和正后方的一个圆形区域，由图b的紫色横线可知，脸部正前方的 Elevation 对应的点的数值顺序为9（图b，逆时针数，紫色的线为第9），请不要忘记 Azimut的取值范围为左耳-80°到右耳+80°的一个扇形区域，所以这时候我们得到的数据只是头部前面的半扇形区域。为了更好地理解，可以把双手分别向左右耳的方向伸展为80°，这时候双手围成的一个水平扇形区域就是图a所示的区域，这时候再把双手一同上下移动，就会构成如图b中一样的一个三维空间。这时候我们把紫线延伸到图a可以看到，头部正后方 Elevation 为41的区域，正是我们想要的后方区域。明白了上面的原理，再来看代码第22行。 %（load_CIPIC_HRIR.m） out = [squeeze(hrir_l(:,front,:));flip(squeeze(hrir_l(:,back,:)),1)]; 该行代码的意义为：先取头部正前方 Elevation 为 front 的25个水平面上的点，再取脸部后方 Elevation为 back 的25个水平面上面的点翻转后在合并，就组成了一个由50个点组成的水平面。至于说为什么要翻转后平面，因为 hrtf 的取值是按照顺时针采样的，而后半部数据是前半部数据的镜像，不翻转数据直接进行卷积后会发现声音是从[-80-\u003e0-\u003e80-\u003e-80-\u003e-180-\u003e80]的顺序播放。 ","date":"2015-12-30","objectID":"/hrtf_matlab/:3:1","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效 Matlab实现","uri":"/hrtf_matlab/"},{"categories":["mt"],"content":"卷积前的操作 得到了 HRIR 数据后我们就可以开始正式进行信号的卷积了，这里我假设您已经阅读完我 前一篇 的文章并以理解其原理。 首先来看audio_with_brir.m函数的33到38行: % if the remainder not equal to zero,then calculate the padding zeros if remainder \u003e 0 padding_zero = points_number - remainder; % padding zeros with audio file audioIn = [audioIn zeros(1,padding_zero)]; end 这段代码的意义是为了进行给音频末尾补零，以便能够让输入音频平均分成N等分。算法就是首按照输入的 BRIR 数据有多少个纵列值（BRIR 必须包括左右耳的数据，并且数值为纵列）来进行音频的 N 等分，这里为points_number，然后查看音频的总长度除以需要 N 等分的余数来进行补零。还是举个简单的例子，11/4 余数为 3，则需要补零的个数为 4 - 3 = 1。 接下来就是设计窗函数来进行淡入淡出，以及高通与低通的滤波器，这里的截止频率分别为20kHz与20Hz。 第55到64行，L和R分别为左右耳，即为音频分割后的音频片段与 BRIR 数据进行卷积。 for i = 1 : points_number % because brir has only 6 points in Azimut {300, 330, 0, 60, 120, 180} % faltung 卷积 L = filter(brir(:,2*i-1)',1,audioIn(1,step*(i-1)+1:step*i)); R = filter(brir(:,2*i)',1,audioIn(1,step*(i-1)+1:step*i)); segment_L(i,:) = L; segment_R(i,:) = R; end 然后是67到78行：为了代码方便，这里的把音频的片段1和片段最后一段也进行了淡入淡出效果，虽然我们不需要第一段开头的淡入和最后一段的淡出，但是加上后也无妨。 % 信号的淡入淡出操作 for n = 1 : points_number % the last segment need only fade in, so we make that later, first make % fade in and fade out except the last segment % add fade in for each segment at the beginning segment_L(n,1:window_N/2) = segment_L(n,1:window_N/2) .* window(1:window_N/2); segment_R(n,1:window_N/2) = segment_R(n,1:window_N/2) .* window(1:window_N/2); % add fade out for each segment at the end segment_L(n,(end - window_N/2 + 1):end) = segment_L(n,(end - window_N/2 + 1):end) .* window((window_N/2+1):end); segment_R(n,(end - window_N/2 + 1):end) = segment_R(n,(end - window_N/2 + 1):end) .* window((window_N/2+1):end); end 86和87行为对第一个音频片段的操作： left = [segment_L(1,1:end - (window_N/2)) segment_L(1,(end - window_N/2 +1):end) + segment_L(2,1:(window_N/2))]; right = [segment_R(1,1:end - (window_N/2)) segment_R(1,(end - window_N/2 + 1):end) + segment_R(2,1:(window_N/2))]; 93到96为直到倒数第二个音频片段的合并。 % except the last segment for n = 2 : points_number - 1 left = [left segment_L(n,(window_N/2+1):end-(window_N/2)) segment_L(n,(end - window_N/2 + 1):end) + segment_L(n+1,1:(window_N/2))]; right = [right segment_R(n,(window_N/2+1):end-(window_N/2)) segment_R(n,(end - window_N/2 + 1):end) + segment_R(n+1,1:(window_N/2))]; end 100到120行为最后一段片段的合并。 n = points_number; left = [left segment_L(n,(window_N/2 +1):end)]; right = [right segment_R(n,(window_N/2 + 1):end)]; 余下的代码就是音频的归一化与滤波。 ","date":"2015-12-30","objectID":"/hrtf_matlab/:3:2","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效 Matlab实现","uri":"/hrtf_matlab/"},{"categories":["mt"],"content":"信号卷积 明白了上面两个函数的功能后我们可以开始正式进行信号的卷积操作，这时候来看main文件，15,16行调用了load_CIPIC_HRIR函数，分别读取了 Elevation 为9和41的数值。 hrir_l = load_CIPIC_HRIR(hrir_fn,front,back,'left'); hrir_r = load_CIPIC_HRIR(hrir_fn,front,back,'right'); 22到26行把所得到的所有HRIR数据分别按照左耳1，右耳1，左耳2，右耳2等等整合到了一起。 hrir = []; for i = 1:size(hrir_l,2) hrir(:,i*2-1) = hrir_l(:,i); hrir(:,i*2) = hrir_r(:,i); end 最后就是audio_with_brir函数，输入参数为音频文件与最后的 HRIR。然后呢？没有然后了，赶紧来听听诺基亚的环绕音效吧。 ","date":"2015-12-30","objectID":"/hrtf_matlab/:4:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效 Matlab实现","uri":"/hrtf_matlab/"},{"categories":["mt"],"content":"解语 以上就是最近几天来关于本科毕设中 HRTF 的一些编程总结，如果想采用其它环绕或者有个性的方法，只需要读取不同空间位置的 HRIR 数据即可。如仍有其它问题的话，欢迎邮件咨询。 最后祝愿各位2016新年快乐~ ","date":"2015-12-30","objectID":"/hrtf_matlab/:5:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效 Matlab实现","uri":"/hrtf_matlab/"},{"categories":["mt"],"content":"尊重原创，请勿转载! 作者：图林根の烤肠 最近毕设的UI设计已经大体上完工，在圣诞之际开始了音频的HRTF合成，由于这方面的相关资料不是非常全面，导师在过完一年一度的旅游假期后外加生病一星期（俺就就当做是真生病了）反而又到了圣诞长假，年前连半个个人影也找不到。同学Oli说过一句挺搞笑的话，科学家们经常把本来很普通的事情故意说得晦涩难懂，以证明自己非常牛叉。虽然导师给指点了一下，然而在看了很多资料后我仍是一头雾水，仍然没搞懂如何合成具体的 3D 音效，然而在读完 Mr. Li 论文中的代码后对 HRTF 的音频合成有了大致的了解，特此总结下相关知识，以减轻学弟学妹们为找不到资料发愁而带来的痛苦。 PS:本文特此感谢下 Mr.Li 的鼎力技术支持，至于说 Mr. Li 是谁? 我也不知道，那可是法兰火车站红灯区附近的名人~（偷笑） 这里给学校免费做个广告，欢迎各位同学来德国就读 伊尔梅瑙工业大学 的 媒体技术 专业，虽然这个学校总体不算出名，但是媒体技术这个专业在德国始终是前三名。 因为这边都是学分制，课程都是自选，如果不具有德语水平，除了个别课程没法用德语完成，英语也是没问题的～～～这个城市位于德国中部图林根州，风景秀礼，城市虽然很小，但是十分适合学习研究。如果你对音频领域感兴趣，这个方向的 IEEE Fellow, Mp3 之父 Brandenburg 教授，正是当年带领团队开发出举世著名mp3 格式的团队，紧邻学校还坐落着德国 弗劳恩霍夫应用研究促进协会 的数字多媒体研究院，正是全德国研究媒体技术的前沿专业机构。 闲话不扯了，正文开始。 ","date":"2015-12-28","objectID":"/hrtf/:0:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":["mt"],"content":"HRTF 介绍 如果看到此文，表明您已经对HRTF(head-related transfer function)有一定的了解，随着这几年 VR 技术的不断发展，3D 音频的应用范围也得到了进一步的扩展，包括最近苹果 Air Pod 使用的虚拟空间音频，也是使用了类似的技术。通俗来讲，HRTF 数据库对应的频域范围的信号，与之对应的则为HRIR(head-related impulse response), 这里主要说明的是时域范围，通过 HRIR 与音频信号进行卷积来实现 3D 音效。当然，实现 3D 音效的数据库不止 HRIR，据导师说明，音效模拟的效果依次为： BRIR \u003e HRIR \u003e Stereo ，这里的BRIR的是binaural room impulse response), 相对HRIR 来说 BRIR 具有更多的空间信息（资料待考证) 。目前互联网上容易寻找的HRTF数据库是 CIPIC HRTF DATABASE(链接已失效)，相关内容我会在下一篇文章中阐述。 ","date":"2015-12-28","objectID":"/hrtf/:1:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":["mt"],"content":"合成方法 首先来说下实现3D模拟的算法，明白之后看代码就会容易许多。 ","date":"2015-12-28","objectID":"/hrtf/:2:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":["mt"],"content":"1. 确定音频的播放位置: 我们知道，通过一段音频与对应的空间位置（azimuth和 elevation 角度）的 HRIR 数据进行卷积即可产生一段位于该点的空间音频。首先来做的是输入的音频在空间上需要分割为多少个点。这里如图所示（稍微将就下，个人手画水平实在不敢恭维），在头部的平面上（这里简化成 2D 平面，容易理解其算法），假如我们想要在 0°，60°，120°， 180°，300° 和 330° 这六个点合成信号。 Azimuth 水平角，12点方向为0度 ","date":"2015-12-28","objectID":"/hrtf/:2:1","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":["mt"],"content":"2. 分割音频为 N 份 每个点的音频时间可以均分或者不等分，均分的话容易计算，因为之前已经定义了6个点，所以这里把音频分为6等分。 每段音频的长度 = 输入音频的总长度 / 需要在空间上生成的位置个数。 假设音频长度为264600个采样点，采样率为44100的6秒片段，那么每段长度为 264600/6 = 44100 ，则每段音频长1秒。 ","date":"2015-12-28","objectID":"/hrtf/:2:2","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":["mt"],"content":"3. 为每段信号进行卷积 接下来就需要对每一段的音频信号跟相对应空间位置的HRIR函数卷积。这里的算法为 片段1 = 音频段1 * HRIR_0° 片段2 = 音频段2 * HRIR_60° 片段3 = 音频段3 * HRIR_120° 片段4 = 音频段4 * HRIR_180° 片段5 = 音频段5 * HRIR_300° 片段6 = 音频段6 * HRIR_330° ","date":"2015-12-28","objectID":"/hrtf/:2:3","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":["mt"],"content":"5. 合并每一段代码后合成最后的声音 输出 = 片段1 + 片段2 +片段3 +片段4 +片段5 +片段6 这里的加法在 Matlab 上面为数组的合并，并不是每一项的数学相加，而是： 输出 = [片段1 片段2 片段3 片段4 片段5 片段6 ] ","date":"2015-12-28","objectID":"/hrtf/:2:4","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":["mt"],"content":"4. 优化处理 细心的读者会发现上面的步骤是5而不是4，因为我们还需要在步骤5之前做接一些额外工作。 如果你按照1-5的步骤走下来后就会发现，如果只用四个步骤合成实际效果并不理想，因为我们总能在每一段的音频的衔接处听到断点，导致音频不连贯。我的做法是在每一段的开头和结尾加上淡入淡出的效果，即为每两段音频的连接处正常化处理。算法为： 4.1 利用窗函数来实现淡入淡出效果 汉宁窗函数 这里用一个汉宁窗来实现淡入淡出，淡入取汉宁窗的前半段，淡出取后半段，这里的窗函数长度是自订的，窗函数长度 = 淡入长度 + 淡出长度。为了方便前后淡入淡出长度相等即可。及窗函数长度 = 2 * 淡入长度 = 2 * 淡出长度 = 淡入长度 + 淡出长度。如果想要淡入效果，即可使用汉宁窗的前半部乘以需要淡入的音频片段即可，就保证音频的平滑淡入过渡，淡出效果使用汉宁窗对后半部即可。 淡入 = 音频的淡入部分 * 淡入窗函数（窗函数前半段） 淡出 = 音频的淡出部分 * 淡出窗函数（窗函数的后半段） 如果最后生成的音频仍有不连贯问题，可采用更改窗函数长度的方法反复试听，一般即可解决问题。 4.2 片段分解： 首先来看图片，因为图片理解起来比文字要具体不少： 我们需把每段的音频分为：淡入``中间音频``淡出 三部分： 其中要注意的是：对于整个音频文件，添加淡入淡出效果的时候第一段音频不需要淡入音频，而最后一段音频不需要淡出，可以当做特例来进行处理。 4.3 合并淡入与淡出 把每一段音频进行淡入淡出处理后，我们就可以把每一段的音频合并起来了。这里拿片段2和片段3合成举例。因为片段2的音频结尾进行了淡出，为了保持连贯，需要把片段2的结尾与片段3的开头合并，即 红色部分和黄色部分重叠相加，才能实现连贯效果。 这里需要注意的一点是，不直接把片段1的淡出结尾直接与片段2淡入开头合并，因为这样会听到片段1点淡出效果，而片段2开头却听到了淡入效果。直接让片段1的淡出结尾与片段2淡入开头合并，可以形成更加自然的过渡效果。虽然这里我表达的有些绕口，那么看下面图片即可明白这里的意思： 最后实现的效果是：在片段的末尾加上了淡入和淡出合并的效果，在片段的开头也加上了相应的效果。 上面的图片可以用接下的文字更加详细得解释： 优化后的片段1’ = 片段1不需要淡入的部分 + 片段1淡出与片段2的淡入叠加的尾部（灰色） 优化后的片段2‘ = 片段2开头窗数据剔除掉的部分（空值） + 片段2中间段 +片段2淡出与片段3淡入叠加部分 . . . 优化后的片段6’ = 片段6开头窗数据剔除掉的部分（空值） + 片段6剩余部分 这里抛开片段1，剩余的片段2到片段6长度均减少了窗函数长度的一半，少去的部分即为淡入（淡出）的长度，这里再举个实际的例子： 片段2原来长度 : 44100， 淡入淡出长度各为：256， 则可以推出：优化后的片段2’长度为：44100 - 256 = 43844，中间的部分长度为 44100 - 256 - 256 = 43588。还有一点需要注意的是，优化后的片段2’ = 片段2 [256+1: 43588] 即从原始片段2的第256个值开始到43588的值。 4.4 片段合并 再优化完每一片段后，最后一步就是把所有的片段合并即可，合并后的结果如图所示： 片段合成 ","date":"2015-12-28","objectID":"/hrtf/:2:5","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":["mt"],"content":"总结 以上就是HRIR函数的具体算法，详细实现代码可以浏览我的 Github，当然我也会在我的 另一篇 文章中补充代码的说明。 最后的合并结果虽然少了5段淡入的音频 ，即256 * 5 = 1280个采样点，但是听起来更加平滑，其实如果整体的音频总是需要在一个点模拟，例如60度角度，那么完全没有必要进行片段合并，而是用整个音频文件卷积对应的空间位置的 HRIR 数据即可。这个片段淡入淡出效果的作用仅仅是为了让音频在空间位置转化的时候听起来不会出现明显的断层而使用。 当然了，如果您发现了更好的优化算法，也欢迎推荐给我，让我们一起讨论。 ","date":"2015-12-28","objectID":"/hrtf/:3:0","tags":["3D音频","BRIR","HRIR","HRTF","空间音频"],"title":"HRTF 3D 音效简明算法","uri":"/hrtf/"},{"categories":null,"content":"该域名出售中 如果您打算购买次域名，请 邮件 联系我，并请在邮件中注明： 您打算购买什么域名 您的出价是多少（美元） ","date":"2015-12-16","objectID":"/domain/:0:0","tags":null,"title":"该域名出售中","uri":"/domain/"},{"categories":null,"content":"热爱古典音乐以及一切美好的事物，业余时间经常自娱自乐。自 2009 年以来，至今长期居住于德国，本硕就读于德国中部小镇伊尔梅瑙工业大学（TU Ilmenau）媒体技术专业 (Media Technology)，业余时间自学 iOS/MacOS 编程。在校期间作为首位国人网络管理员，独自撰写了面向留学生的 校园网入网指南 的中文手册内容。2019年后在大众集团（Volkswagen AG）总部沃尔夫斯堡市的研发部门 (Forschung und Entwicklung) 从事VR/AR领域的实习工作。2022年起至今就职于德国联邦道路研究院（Bundesanstalt für Straßenwesen，BASt）主要参与道路安全方面的 VR/AR 研究项目。 如有任何问题，欢迎 邮件 联系我。 ","date":"2015-12-16","objectID":"/about/:0:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"业余时间开发的app: 类型 名称 下载 iOS 平行进口车助手 iOS 隐私猎手 MacOS Piano LED for Arduino ","date":"2015-12-16","objectID":"/about/:1:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":["mt"],"content":"尊重原创，请勿转载! 作者：图林根の烤肠 理论上来说，所有的传递函数都可以写成如下的形式： 。其中 为我们需要的滤波器， 为全通滤波器（ap 为 All Pass缩写）， 就是我们需要计算求出的最小相位滤波器。 为了得到最小的相位滤波器函数，具体的做法就是把 这个滤波器的零点（英语为Zero，德语 Nullstelle）放到单位圆（Unit Circle）里面。前面提到的零点通俗简单点说就是让 分数表达式分子等于零的解的位置。 下面来举个简单的例子： 上面的H1和H2就是两个滤波器函数。我们可以很容易的计算出 H1 的 零点 为 -1/2（让2+1/z=0,求出z为-0.5），同理 H2 的零点为 -2。具体形象些我们使用 matlab 画出 unit circle，并标出 零点和 极点: zplane([2,1],[2]) % H1 zplane([1,2],[2]) % H2 结果如下所示： H1 H2 从图中我们可以清楚的看到，零点（图中空心圆圈）的位置 H1（-0.5）位于圈内，H2（-2）位于圈外。为了获得最小的相位变化，我们需要把位于圈外的点镜像折叠到圈内，其做法是求Z模的倒数，这里的例子是，H2=-2 在圈外我们求其模的倒数便是 -0.5 (1/abs(2))。具体说是是否正确，我们来看频响，使用matlab 命令列出2个滤波器函数的频响图。 freqz([2,1],2); %Frequenzresponse for H1 freqz([1,2],2) %Frequenzresponse for H2 H1 H2 我们只看 phase 这个纵轴，H1 的相位变化范围（0到-30度）明显要小于 H2 的相位变化范围（0到-200），所以说在保持频响（每一个图示的上图）相等的情况下，我们通过镜像变化零点得到了相位变化相对较小的滤波函数。 ","date":"2014-03-01","objectID":"/minimum_phase_filters/:1:0","tags":["FILTER","Minimum Phase Filters","最小相位","滤波器"],"title":"Minimum Phase Filters 最小相位滤波器简易","uri":"/minimum_phase_filters/"},{"categories":["mt"],"content":"总结： 最小相位滤波器的主要算法就是通过镜像变化滤波函数的零点来得到的，然后再卷积一个全通滤波器就是我们最后想要的滤波器。我们可以通过保持频响不变的情况来获得相位变化相对较小的滤波函数，它有一个显著的点：滤波器的延迟最小，如果你打算设计一个延迟很低的滤波器，那么最小相位滤波器是首选。 ","date":"2014-03-01","objectID":"/minimum_phase_filters/:1:1","tags":["FILTER","Minimum Phase Filters","最小相位","滤波器"],"title":"Minimum Phase Filters 最小相位滤波器简易","uri":"/minimum_phase_filters/"},{"categories":["mt"],"content":"参考资料： Minimum Phase Filters, Severin Ioan, Ilmenau University of Technology. P. O. Box 100565, D-98684 Ilmenau, Germany. ","date":"2014-03-01","objectID":"/minimum_phase_filters/:1:2","tags":["FILTER","Minimum Phase Filters","最小相位","滤波器"],"title":"Minimum Phase Filters 最小相位滤波器简易","uri":"/minimum_phase_filters/"},{"categories":["mt"],"content":"Vector Quantizer LBG 矢量量化简要实例算法 ","date":"2014-02-21","objectID":"/lbg/:0:0","tags":["VECTOR QUANTIZER LBG","矢量量化"],"title":"Vector Quantizer LBG 矢量量化简要实例算法","uri":"/lbg/"},{"categories":["mt"],"content":"尊重原创，请勿转载! 作者：图林根の烤肠 最近忙于考试复习 ADSP (数字信号处理) 中，查看了一些资料，大多写的十分繁琐，一点都不生动形象，特此举个实例，方便理解，文章内容来源于课上的课件. 基本名词解释等相关资料可以从其它网站查询，这里只是实例举例： 输入的 Training Set 为：x = [3,2,4,5,7,8,8,9]。 我个人理解 Training Set 是一种替代 pdf 的方法，按照 N 维向量分割后的输入信号）。N 表示维数，如果 N = 2，表示的是二维空间，xy 二轴。 简要的计算方法： 随机生成两个codebook vectors $y_{1}$ 与 $y_{2}$，比如说 $y_{1}$ = [1,2], $y_{2}$ = [5,6]，然后把 x 数值按照 N 维空间分类，这里 N = 2，所以分为[3,2], [4,5], [7,8], [8,9]即可。 求出 decision boundary $b_{k}$，其中 $b_{k}=(y_{1}+y_{2})/2$，我们可以求出 $b_{k} = [3,4]$。我们接下来就可以用一条直线来划分空间，注：此处的直线是垂直于连接 $y_{1}y_{2}$ 的直线，作用是 为了便于观察 才画出来的， 不影响计算机的其他运算。第三步的图片可以清晰说明。 把所有的x点归类，划分到 $y_{1}$ 或者 $y_{2}$ 的空间里面，距离计算公式就是简单的两点间向量计算公式(参考下图)：对于点 $x_{1}$ = [3,2] 到 $y_{1}$ = [1,2] 的距离小于到 $y_{2}$ = [4,5] 的距离，所以可以把 $x_{1}$ 划分到图像左边的空间中。 计算新的 codewords $y_{k}$ 作为 Voronoi 空间的质心（centroid or conditional expectation ），其中的 $y_{k}$ 计算方法为 简要的说就是 Vornonoi 空间里所有的点的数值求和后再除以这个空间里面点的个数，此处的例子是：在 Voronoi region1 中只有一个点 $x_{1}$，所以新的 $y_{1}$ 为 $x_{1}$，也就是 [3,2]。再来看 Voronoi region 2 里面，$y_{2}$ 的计算方法为： 计算完后移动这两个 $y_{1}y_{2}$ 为新的质心重复第二步骤即可。 具体编程的例子就不写了，原理大概明白编起来也不是很困难的，最后通过这个算法的实际图例大概如下图所示，当然不是上面所举的那个例子。 最后推荐一个很好的 中文翻译相关博客 ","date":"2014-02-21","objectID":"/lbg/:1:0","tags":["VECTOR QUANTIZER LBG","矢量量化"],"title":"Vector Quantizer LBG 矢量量化简要实例算法","uri":"/lbg/"},{"categories":["mt"],"content":"参考资料： Digital Signal Processing 2/ Advanced Digital Signal Processing Lecture 5, Vector Quantizer, LBG Gerald Schuller, TU Ilmenau http://www.data-compression.com/vq.html ","date":"2014-02-21","objectID":"/lbg/:2:0","tags":["VECTOR QUANTIZER LBG","矢量量化"],"title":"Vector Quantizer LBG 矢量量化简要实例算法","uri":"/lbg/"},{"categories":["mt"],"content":"Hermite Curve 以及 Bézier Curve 贝塞尔曲线的简要计算 ","date":"2013-12-15","objectID":"/bezier_curve/:0:0","tags":["BÉZIER CURVE","HERMITE CURVE","贝塞尔曲线"],"title":"Hermite Curve 以及 Bézier Curve 贝塞尔曲线的简要计算","uri":"/bezier_curve/"},{"categories":["mt"],"content":"尊重原创，请勿转载! 作者：图林根の烤肠 详细资料可以查询 wiki 的百科网站，以下内容为个人总结，难免出现错误，欢迎指正最后。 要了解Hermite以及Bézier，首先来简要了解这个三次参数曲线（Parametric cubic curves）： 首先是一个空间三位曲线方程式如下： 这里面的 U 是scalar，B 是 basic function，而 G 就是 vector向量了，请注意这个线性方程可以转换为下图矩阵相乘的形式： 在了解了上面这个矩阵就可以开始正文了： 首先是 Hermite 曲线，它是由一些参数决定： 2个首位端点 P1，P4 及其各自的斜率参数 R1 与 R4 Hermite 几何矢量（geometry vector）$G_{H}$ Hermite 矩阵为: Hermite 曲线最后的表述方式如前面介绍的三次参数曲线为： $Q(u) = U \\cdot M_{h} \\cdot G_{H}$。这里不仅有人要问，这 Hermite 矩阵为什么是这个样子，其中的推导过程在这偷个懒，直接拽张图片过来 上图中的 Q(0) 与 Q(1) 分别为 u=0 与 u=1 用特殊法。带入上面的三次曲线方程的结果，然后对其方程式求导，带入u=0与u=1，分别求出 Q(0) 与 Q(1) 的斜率。因为 Q(u) = [P1:P4:R1:P4](这是一个4行一列的矩阵)，然后会得出一个等式: 又因为 $G_{H}$ 也等于[P1;P4;R1;P4], 所以方程两边可以消去[P1;P4;R1;P4]得到等式。 再求逆矩阵便可得到 Hermite 矩阵: 按照同样的方法，我们可以接下来获得贝塞尔曲线 Bézier Curve。下面这张图清晰直观的了解到 Bézier Curve 是一个三位空间曲线通过转换投影到2D平面的曲线。 图片来源：Watt,A: 3D-Computergrafik 同上面介绍的 Hermite曲线计算一样，Bézier curve 同理表述为 或者以矩阵的形式表示： 其中 $P_{i}$ 为行向量 (row-vector)，里面的推导过程就不介绍了，详情可以查询 维基百科 的网页介绍。 另外推荐一篇介绍 Hermite 曲线的 OpenGL 博客，非常值得一看。 参考资料： 3D-Repräsentation，Vorlesung Computeranimation WS 2009 © Nowak, Weigel, Kirchner, Schuller ","date":"2013-12-15","objectID":"/bezier_curve/:1:0","tags":["BÉZIER CURVE","HERMITE CURVE","贝塞尔曲线"],"title":"Hermite Curve 以及 Bézier Curve 贝塞尔曲线的简要计算","uri":"/bezier_curve/"},{"categories":["mt"],"content":"G.711 a-law 及 u-law 简要算法过程 ","date":"2013-12-15","objectID":"/alau/:0:0","tags":["a-law","a律","G.711","u-law","u律"],"title":"G.711 a-law 及 u-law 简要算法过程","uri":"/alau/"},{"categories":["mt"],"content":"尊重原创，请勿转载! 最近课上在讲 a-law 以及 $\\mu$-law 的压缩算法，查了下 wiki，英文版的资料算是比较全的了，国内的那xx百科相比之下简直跟没有一样。 其中 a-law 和 $\\mu$-lau 的公式分别如下: $\\mu$-lau 公式如下: $\\mu$-law 给出 $\\mu$ 值为255，a-law 中的A赋值为87,6 由于课上老师只是介绍了 $\\mu$-law，在此简要说明一下算法。 公式中的 x 是输入信号取值为 0到1，需要把 x信号归一化，此处为除以 A（最大波峰值），y 为输出信号，具体算法可根据应为 wiki 给出的公式如上面所示，其中sgn(x)表示输入信号的符号（正值为1，负值为-1），matlab 可用sign函数代替，然后进行采样量化，比如8bit线性采样，最后通过下图逆运算就可以得到关于 x 的函数，从而算出通过 $\\mu$-law 编码的文件。 至于有人不禁要问，为什么这么折腾来回算一下，其实是因为，此算法同样适用于非均匀分布函数，一般的线性采样只能用于均匀分布信号，并且 SNR(信噪比) 不会有太大的变化。 ","date":"2013-12-15","objectID":"/alau/:1:0","tags":["a-law","a律","G.711","u-law","u律"],"title":"G.711 a-law 及 u-law 简要算法过程","uri":"/alau/"},{"categories":["mt"],"content":"参考资料： Digital Signal Processing 2/Advanced Digital Signal Processing Lecture 3. Gerald Schuller, TU Ilmenau http://www.dspguide.com/ch22/5.htm ","date":"2013-12-15","objectID":"/alau/:2:0","tags":["a-law","a律","G.711","u-law","u律"],"title":"G.711 a-law 及 u-law 简要算法过程","uri":"/alau/"},{"categories":["mt"],"content":"补充说明 最近复习看了篇文章，明白了一些，稍微补充一点知识: 一般来说语音信号是符合拉普拉斯分布的，当我们使用线性量化的时候则会造成一些不必要的量化等级的浪费（这里还得请高人解答，不知道为什么），于是我们就把信号先进行放大，使其的pdf分布发生改变，使pdf变得更加的均匀，然后再进行量化反转，从而得到最终的信号。如下图所示： 左上角第一幅为原信号。 右上角为companding后的信号。 左下角为原信号的峰值分布（Amplitude Values），右下为扩展后的峰值分布，由此可以看出，小信号（峰值小）的变化要显著高于大信号的变化，从而使信号整体的pdf分布更加的均匀起来。 这样做的好处有两点： 提高的信噪比snr，如下图所示 降低了设备的需求，因为只是进行的一步简单的公式计算 蓝色表示的是直接量化后得到的信噪比snr，红点为通过companding（信号扩展压缩）后然后得到的snr，明显可知要好于未经过扩展的原信号。但是a-lau和u-lau却不适合pdf变化非常剧烈的信号，这时候则需要其它更加优秀的算法，比如说Lloyds-Max和LBG算法。 ","date":"2013-12-15","objectID":"/alau/:3:0","tags":["a-law","a律","G.711","u-law","u律"],"title":"G.711 a-law 及 u-law 简要算法过程","uri":"/alau/"},{"categories":["mt"],"content":"参考资料： Non-uniform Quantization: Companding , μ-Law and A-Law ； Aravindan Joseph Benjamin. Digital Signal Processing Research Laboratory Ilmenau University of Technology. P. O. Box 100565, D-98684 Ilmenau, Germany. Email: aravindan-joseph.benjamin（at）tu-ilmenau.de ","date":"2013-12-15","objectID":"/alau/:4:0","tags":["a-law","a律","G.711","u-law","u律"],"title":"G.711 a-law 及 u-law 简要算法过程","uri":"/alau/"},{"categories":"其它","content":"请通过 邮件 联系我，并请您注明: 您打算购买哪个域名 希望购买的价格（美元） ","date":"2013-09-02","objectID":"/sale/:0:0","tags":"其它","title":"该域名出售中...","uri":"/sale/"}]